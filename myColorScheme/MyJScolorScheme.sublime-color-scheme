
{
    "name": "My JS Color Scheme",
    "author": "dhruw lalan",
    "variables":
    {
        "white":            "white",
        "comment":          "#808080",
        "operatorLight":    "palegoldenrod",
        "operatorMedium":   "khaki",
        "operatorDark":     "yellow",
        "keyword":          "deeppink",
        "string":           "springgreen",
        "tsexpressionb":    "rgba(124, 124, 124, 0.2)",
        "tsexpressionf":    "rgba(124, 124, 124, 0.2)",
        "constant":         "violet",
        "function":         "cyan",
        "functionIO":       "orange",
        "objectProperty":   "#ff9999",
        "this":             "khaki",
        "class":            "#F1FF7B",
        "domObject":        "mediumspringgreen"
    },
    "globals":
    {
        //  EDITOR                  
            "background": "#191919",
            "foreground": "white",
            "caret": "white",
            "invisibles": "white",
            "line_highlight": "#212121",
        //  ACCENTS                 
            "fold_marker": "yellow",
            "minimap_border": "cyan",
            "accent": "cyan",
        //  GUTTER                  
            "gutter": "#191919",
            "gutter_foreground": "#00c9c9",
        //  SELECTION               
            "selection": "#202020",
            "inactive_selection": "#222222",
            "selection_border": "#00bbff",
            "selection_corner_style":"cut",
        //  GUIDES                  
            "guide": "#6F6F6F",
            "active_guide": "cyan",
            "stack_guide": "#06FF05",
        //  FIND                    
            "find_highlight_foreground": "black",
            "find_highlight": "white",
        //  BRACKETS                
            "brackets_options":"foreground",
            "brackets_foreground":"yellow",
            "bracket_contents_options":"foreground",
            "bracket_contents_foreground":"yellow",
    },
    "rules":
    [
        //  INVALID                 
            {
                "name": "Invalid",
                "scope": "invalid",
                "foreground": "#FFFFFF",
                "background": "#FF1E00"
            },
        //  COMMENTS                
            {
                "name": "Single Line Comment Content",
                "scope": "comment.line.double-slash.js",
                "foreground": "var(comment)",
                "font_style": ""
            },            {
                "name": "Single Line Comment Double Slash",
                "scope": "punctuation.definition.comment.js",
                "foreground": "var(comment)",
                "font_style": "bold"
            },
            {
                "name": "Comment Block",
                "scope": "comment.block.js",
                "foreground": "var(comment)",
                "font_style": "bold"
            },
        //  VARIABLES               
            {
                "name": "Variable Defining Keywords",
                "scope": "storage.type.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            }, 
            {
                "name": "Identifiers",
                "scope": "variable.other.readwrite.js",
                "foreground": "var(white)",
                "font_style": ""
            },
        //  STRINGS                 
            {
                "name": "String Content",
                "scope": "string",
                "foreground": "var(string)",
                "font_style": ""
            },
            {
                "name": "Strings Quote Start End",
                "scope": "punctuation.definition.string.begin.js , punctuation.definition.string.end.js",
                "foreground": "var(string)",
                "font_style": "bold"
            },
            {
                "name": "Template String Expression",
                "scope": "meta.template.expression.js",
                "background": "var(tsexpressionb)",
                "foreground": "var(tsexpressionf)",
                "font_style": ""
            },
            {
                "name": "Template String Dot",
                "scope": "punctuation.accessor.js",
                "foreground": "var(white)",
                "font_style": ""
            },
            {
                "name": "Template String Variables",
                "scope": "meta.template.expression.js source.js.embedded.expression variable.other.constant.js",
                "foreground": "var(white)",
                "font_style": ""
            },
        //  CONSTANTS               
            {
                "name": "Generic Constants",
                "scope": "constant",
                "foreground": "var(constant)",
                "font_style": "bold"
            },
            {
                "name": "Support Constants",
                "scope": "support.constant.builtin.js",
                "foreground": "var(constant)",
                "font_style": "bold"
            },
            {
                "name": "Numeric Constants",
                "scope": "constant.numeric",
                "foreground": "var(constant)",
                "font_style": ""
            },
            {
                "name": "Boolean Constants",
                "scope": "constant.language.boolean.true.js",
                "foreground": "var(constant)",
                "font_style": "bold"
            },         
        //  OPERATORS               
            {
                "name": "Comma Operator",
                "scope": "punctuation.separator.comma.js",
                "foreground": "var(white)",
                "font_style": ""
            },
            {
                "name": "Asignment Operator",
                "scope": "keyword.operator.assignment.js",
                "foreground": "var(operatorLight)",
                "font_style": "bold"
            },
            {
                "name": "Arithmetic Operator",
                "scope": "keyword.operator.arithmetic.js",
                "foreground": "var(operatorMedium)",
                "font_style": "bold"
            },
            {
                "name": "Asignment Operator Augmented",
                "scope": "keyword.operator.assignment.augmented.js",
                "foreground": "var(operatorMedium)",
                "font_style": "bold"
            },
            {
                "name": "Comparision Operator",
                "scope": "keyword.operator.comparison.js",
                "foreground": "var(operatorMedium)",
                "font_style": "bold"
            },
            {
                "name": "Relational Operator",
                "scope": "keyword.operator.relational.js",
                "foreground": "var(operatorMedium)",
                "font_style": "bold"
            },
            {
                "name": "Logical Operator",
                "scope": "keyword.operator.logical.js",
                "foreground": "var(operatorDark)",
                "font_style": "bold"
            },
            {
                "name": "Ternary Operator",
                "scope": "keyword.operator.ternary.js",
                "foreground": "var(operatorDark)",
                "font_style": "bold"
            },
            {
                "name": "New Operator",
                "scope": "keyword.operator.word.new.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "General Operators",
                "scope": "keyword.operator.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "Punctuation Group Begin End",
                "scope": "punctuation.section",
                "foreground": "var(white)",
                "font_style": ""
            },
        //  STATEMENT TERMINATOR    
            {
                "name": "Statement Terminator",
                "scope": "punctuation.terminator.statement.js",
                "foreground": "var(white)",
                "font_style": ""
            },
        //  CONDITIONALS            
            {
                "name": "Conditional Keywords",
                "scope": "keyword.control",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
        //  FUNCTIONS & METHODS     
            {
                "name": "Function Keyword",
                "scope": "storage.type.function.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "Function Name",
                "scope": "entity.name.function.js",
                "foreground": "var(function)",
                "font_style": ""
            },
            {
                "name": "Arrow Function",
                "scope": "storage.type.function.arrow.js",
                "foreground": "var(function)",
                "font_style": "bold"
            },
            {
                "name": "Built-in Function",
                "scope": "support.function.js, support.function.builtin.js",
                "foreground": "var(function)",
                "font_style": ""
            },
            {
                "name": "Methods",
                "scope": "variable.function.js",
                "foreground": "var(function)",
                "font_style": ""
            },
            {
                "name": "Support Methods",
                "scope": "support.function.console.js",
                "foreground": "var(function)",
                "font_style": ""
            },
            {
                "name": "Function Parameters",
                "scope": "variable.parameter.function.js",
                "foreground": "var(functionIO)",
                "font_style": "bold"
            },
            {
                "name": "Return Statement",
                "scope": "keyword.control.flow.js",
                "foreground": "var(functionIO)",
                "font_style": "bold"
            },
            {
                "name": "Function Parameter Seperator",
                "scope": "punctuation.separator.parameter.function.js",
                "foreground": "var(operator)",
                "font_style": ""
            },
        //  OBJECTS                 
            {
                "name": "Object Properties",
                "scope": "meta.object-literal.key.js",
                "foreground": "var(objectProperty)",
                "font_style": "bold"
            },
            {
                "name": "Object Properties Used",
                "scope": "meta.property.object.js",
                "foreground": "var(objectProperty)",
                "font_style": "bold"
            },
            {
                "name": "Key Value Separator",
                "scope": "punctuation.separator.key-value.js",
                "foreground": "var(operator1)",
                "font_style": "bold"
            },
            {
                "name": "Supporting Object",
                "scope": "support.type.object",
                "foreground": "var(domObject)",
                "font_style": "italic bold"
            },
            {
                "name": "This Keyword",
                "scope": "variable.language.this.js",
                "foreground": "var(this)",
                "font_style": "bold"
            },
        //  CLASS                   
            {
                "name": "Class Keyword",
                "scope": "storage.type.class.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "Class Name",
                "scope": "entity.name.class.js",
                "foreground": "var(class)",
                "font_style": "bold"
            },
            {
                "name": "Class Constructor Name",
                "scope": "entity.name.function.constructor.js",
                "foreground": "var(function)",
                "font_style": "bold"
            },
            {
                "name": "Class Constructor Call",
                "scope": "meta.function-call.constructor.js",
                "foreground": "var(class)",
                "font_style": "bold"
            },
            {
                "name": "Getters and Setters",
                "scope": "storage.type.accessor.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "Built-in Class",
                "scope": "support.class.builtin.js",
                "foreground": "var(class)",
                "font_style": "bold"
            },
            {
                "name": "Support Class",
                "scope": "support.class.js",
                "foreground": "#F1FF7B",
                "font_style": "bold"
            },
            {
                "name": "Support Class Import",
                "scope": "source.js meta.import.js variable.other.readwrite.js",
                "foreground": "#F1FF7B",
                "font_style": "bold"
            },
            {
                "name": "Support Class Import Punctuation",
                "scope": "meta.import.js meta.block.js punctuation.section.block , meta.import.js meta.block.js punctuation.separator.comma.js",
                "foreground": "white",
                "font_style": "bold"
            },
            {
                "name": "Class Extends Keyword",
                "scope": "meta.class.js storage.modifier.extends.js",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "Inherited Class",
                "scope": "source.js meta.class.js",
                "foreground": "#F1FF7B",
                "font_style": "bold"
            },
        //  TRY CATCH               
            {
                "name": "Throw Keyword",
                "scope": "keyword.control.trycatch.js",
                "foreground": "var(functionIO)",
                "font_style": "bold"
            },
        //  NODE                    
            {
                "name": "Node Support Functions",
                "scope": "support.function.node.js",
                "foreground": "var(function)",
                "font_style": ""
            },
            {
                "name": "Destructuring Braces",
                "scope": "source.js.webpack meta.binding.destructuring.mapping.js punctuation.section.block",
                "foreground": "var(operatorMedium)",
                "font_style": ""
            },
            {
                "name": "Node Keywords",
                "scope": "support.constant.node.js",
                "foreground": "hotpink",
                "font_style": "bold"
            },
        //  REGEX                   
            {
                "name": "Regex Start End",
                "scope": "string.regexp.js punctuation.definition.string.begin.js | string.regexp.js punctuation.definition.string.end.js",
                "foreground": "var(string)",
                "font_style": "bold"
            },
            {
                "name": "Regex Escape",
                "scope": "string.regexp.js constant.character.escape.backslash.regexp",
                "foreground": "var(constant)",
                "font_style": "bold"
            },
            {
                "name": "Regex String",
                "scope": "string.regexp.js",
                "foreground": "khaki",
                "font_style": "bold"
            },
            {
                "name": "Regex Anchor",
                "scope": "string.regexp.js keyword.control.anchor.regexp",
                "foreground": "deeppink",
                "font_style": "bold"
            },
            {
                "name": "Regex Operator OR",
                "scope": "string.regexp.js keyword.operator.or.regexp",
                "foreground": "var(keyword)",
                "font_style": "bold"
            },
            {
                "name": "Regex Group Parenthesis",
                "scope": "string.regexp.js meta.group.regexp punctuation.definition.group",
                "foreground": "var(functionIO)",
                "font_style": "bold"
            },
            {
                "name": "Regex Character Class Begin End",
                "scope": "string.regexp.js punctuation.definition.character-class.begin.regexp | string.regexp.js punctuation.definition.character-class.end.regexp",
                "foreground": "var(functionIO)",
                "font_style": "bold"
            },
    ]
}